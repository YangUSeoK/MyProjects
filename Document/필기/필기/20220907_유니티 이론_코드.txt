using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class HandmadeMesh : MonoBehaviour
{
    private void Start()
    {
        BuildMesh();
    }

    private void BuildMesh()
    {
        // < > : Template, Generic Programming
        // C#, 유니티에서 제공하는 것 외에도
        // 우리가 만든 것들도 (컴포넌트, 자료형 등등 뭐든)도 똑같이 넣으면 읽어올 수 있다.

        // 추가한 후에 가져오고, 추가가 안되면 null 
        // >> 이미 가지고 있다면, 추가가 안되므로 null 이 뜬다!
        MeshFilter mf = gameObject.AddComponent<MeshFilter>();

        // Mesh 를 만들거니까 동적할당 해준다.
        Mesh newMesh = new Mesh();
        
        // 이런모양을 만들거임
        // 0 -- 1
        // ㅣ   ㅣ
        // 2 -- 3

        // Vertex Buffer : Vertex의 위치정보를 넣기위한 것.
        // 유니티에는 Mesh 안에 여러 정보가 있고, Vertex의 위치정보만 가진다.
        newMesh.vertices = new Vector3[]
        {
            // Vector 은 3개의 요소를 가진 배열.
            // Vector3의 배열이므로 각 Vector3를 동적할당 해줘야 한다. (2차원 배열)
            new Vector3(-0.5f, 0.5f, 0.0f), // V0
            new Vector3(.5f, .5f, 0f),      // V1 : 이렇게도 표기할 수 있다.
            new Vector3(-0.5f, -0.5f, 0.0f),// V2
            new Vector3(0.5f, -0.5f, 0.0f)  // V3
        };

        // Index Buffer
        newMesh.triangles = new int[]
        {
            0,1,2,      // 첫번째 삼각형
            2,1,3       // 두번째 삼각형
        };

        newMesh.normals = new Vector3[]
        {
            new Vector3(0.0f,0.0f,-1.0f),
            new Vector3(0.0f,0.0f,-1.0f),
            new Vector3(0.0f,0.0f,-1.0f),
            new Vector3(0.0f,0.0f,-1.0f),
        };

        // 유니티는 OpenGl 방식이다. 좌측하단이 (0,0)
        // Vertex Buffer 이랑 순서 똑같이 들어가야 함.
        newMesh.uv = new Vector2[]
        {
            new Vector2(0.0f,1.0f),
            new Vector2(1.0f,1.0f),
            new Vector2(0.0f,0.0f),
            new Vector2(1.0f,0.0f)
        };
        
        mf.mesh = newMesh;

        MeshRenderer mr = gameObject.AddComponent<MeshRenderer>();
        // Material( ) 인자는 두가지. 머티리얼 소스를 받으면 그대로 복사 => 복사생성자
        // 아니면 실제로 자료(Shader)를 넣어줘야 한다.
        Material newMat = new Material(Shader.Find("Standard"));
        newMat.name = "HandmadeMaterial";


        // Resources 폴더에서 Texture 이미지를 받아온다.
        Texture2D tex = Resources.Load<Texture2D>("Textures\\T_Winter");
        // newMat의 기본 Texture을 설정
        newMat.mainTexture = tex;



        mr.material = newMat;
       

        // 현재 씬의 오브젝트 중 누군가가 가지고 있는 컴포넌트를 가져온다. 
        // 아무데도 없으면 null 반환
        // GetComponent<MeshFilter>();

    }
}