언어의 종류가 많은 이유 : 방법론, 목적, 철학이 달라서
C는 어렵다 -> 알아두면 다른거 다 배우기 쉬움.
절차지향언어 (vs 객체지향언어 Java)

헬로월드의 상징성
= 컴퓨터, 입력, 연산, 출력 가능
언어별로 헬로월드의 작성, 처리방법이 틀리므로, 그런 점을 생각해보자


컴퓨터 = 연산도구
메모리 = 연산을 위한 값을 저장해두는 곳
변수 = 메모리에 value가 저장되 있는 주소. 
         내가 필요한 값을 메모리에서 찾아가기 위한 주소
변수선언 = 주소에 이름을 붙여서 내가 쓰고자 하는 공간을                 마련한다.

값(데이터)이 어떻게 저장되고 쓰이는지를 처음부터 잘 알아야 한다. 나중에 복잡해지면 이부분이 제일 중요함. 기초필수


자료형 사용 이유 2가지
{
1. 컴퓨터는 정수연산에 특화되어 있다.
계산기 역할을 하려면 실수처리를 해야 함.
계산은 제대로 하지만, 
정수인지, 실수인지, 양수인지, 음수인지에 따라 읽어오는 방법이 다르다. << 이 읽어오는 방법이 DataType

2. 메모리 용량은 한정되어 있고, 효율적으로 사용하기 위해.
Bit = 0,1 
8Bit = 00000000    8개의 Bit가 있다.(총 2^8 가지 표현가능)
      => 1Byte

int = 4Byte = 32Bit  => 32개의 Bit를 할당받는다.

int가 8Byte 할당을 받을 수도 있는데 이것은 왜?

int의 사이즈는 cpu가 한번에 계산을 할 수 있는 크기를 기준으로 정해진다. 
32Bit cpu에선 32Bit, 64Bit cpu에선 64Bit으로 정해진다.
(윈도우 32,64Bit와는 별개. 프로그램을 개발할 때 32Bit, 64Bit 중 기준을 잡아서 개발한다. 현재는 32Bit 기준)

=====>> int는 연산이 가장 빠르다.(연산의 기본이 된다.)

signed int (부호가 있는 정수) = int (signed 생략가능)
unsigned int (부호가 없는 정수)

1Byte = 8Bit 
0~255까지의 수를 표현할 수 있다.
하지만 부호가 있는 경우 부호를 표현하기 위해(부호비트, 1의보수, 2의 보수) 저장할 수 있는 공간이 1Bit 줄어든다. 
0과 양수만을 쓰는 경우, 1Bit를 더 사용할 수 있기 때문에 unsigned int 를 사용하여 공간을 더 효율적으로 사용할 수 있다.

============================

실수
실수는 정밀도가 생명이다.
부동소수점 오차가 있기 때문에 항상 주의.







Color scirpter - 확장 - 아무거나 고르고 f5
언어-C 스타일 설정
소스코드 컨트롤 cv
오른쪽 아래 html 복사 -> 블로그에 붙여넣기(오른쪽 아래 html 체크)