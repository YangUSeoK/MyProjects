VR 오큘러스 퀘스트 는 어플기반이라서 지금상태로는 안돌아갈수도 있다

최적화를 해야함

퍼포먼스가 안나오는 이유는 하나뿐 : 연산량이 많아서

연산량을 줄이는 작업 :

알고리즘적으로 최적화는 거의 없다

예) 네브메쉬를 사용해서 길찾기를 했다면 공식을 어떻게해서 하는건 힘들다

대신 오브젝트 수를 줄이거나 넓이를 줄이거나 하는 방법을 사용할수있다

소스코드는 몆줄안될경우 최적화 할게 별로 없다

pc에서 돌아가다가 모바일에서 안돌아가는 가장 큰 이유는 쉐이더 이다

pc는 다이렉트x기반 안드로이드는 openGL 기반이라서

기본적으로 전자가 더 빠르다

안드로이드의 칩셋으론 쉐이더가 풀로 안돌아간다

즉 안돌아가는 쉐이더가 있을수 있어서 그걸 돌아갈수 있게 변환시켜야 하는데 거기서 또 리소스를 잡아먹는다

처음부터 모바일을 생각하고 만들어야함

지금 받은 모델은 데부분 pc용

모델을 이미 만들어져있기때문에 바꿀수눈 없으니 다른 방법으로 최적화를 해야한다

가장 대표적인게 켜고 끄는것
(보는 시야에 들어오는 오브젝트만 켜고 나머지는 끄는방법)

중요한건 바깥인가 안쪽인가

바깥인경우 멀리까지 안그리는 법을 생각한다
예(멀리있는건 그림으로만 그리거나 벽으로막고 그밖을 안그리는법)
모델을 끄고 안개를 넣어 안보이게 만들어준다
(우리프로젝트의 경우 안개나 혹은 그냥 어둡게만들어서 하는건 어떨까)

텍스쳐를 거리에 따라 다르게 설정하는 방법도 있다
이걸 mipmap이라고 함 이걸 자동으로 만들어주는 공식이 있다

텍스쳐 mipmap에 수치조정 크기는 실제로 확인하면서 조정

안드로이드 버전으로 바꿀수도 있음


텍스쳐가 많아 다 하기 힘들면 
폴더로 들어가서 용량이 많은순으로 정렬후 일정용량까지만 설정하거나

많이 사용하는 텍스쳐 우선으로 한다

많은 퍼포먼스가 올라가는 것들을 우선적으로 수정해야함

실내 최적화 방법

실내의 방들을 따로 때서  방 매니저로 관리한다

특정한 위치로 갔을때 방을 켜고 멀어지면 끄는식으로 한다

방의 안쪽은 밖에서 볼때 만들어질필요가 없다
문이 열릴때 안쪽공간을 만들어주면된다
문에 손을대면 그때 켜준다
방 안에 들어가면 방 밖의 공간은 전부 꺼놔도 된다

창문의 경우 안의 공간을 끈다해도 안이 보여야하기때문에 창문에서 보이는 범위의 오브젝트들은 켜줘야한다



메쉬필더와 메쉬랜더러는 각각 다른 리소스를 사용하기때문에 끌려면 게임오브젝트를 통째로 꺼야한다


캐릭터 애니메이션도 부하가 많이 걸린다

보이지 않는 캐릭터는 애니메이션을 재생할 필요가 없다

콜라이더 문제
깨지는 물건의 경우 파츠마다 리지드바디와 콜라이더가 들어가 있으면 부하가 많이 들어간다

깨지는 순간에만 나오면 된다


콜라이더가 가장 물리연산에 부하를 많이건다 

파티클이나 쉐이더같은 좋은 효과들을 사용하는건 좋지만
부하를 많이 먹으니 대체제를 찾아보는것도 좋다
예를들어 파티클로 이펙트를 표시하는것 대신 이미지파일로 잠깐 보여주는걸로 대체할수도 있다

만드는프로젝트의 핵심 요소를 줄이는건 핵심요소의 재미를 줄이는게 되기때문에 그외의 것들에서 찾아봐야한다




의문 : 씬을 로드하는것을 사용해 공간을 나눠놓으면 리소스를 많이 잡아먹는가? 씬이 많아지면 어떻게 될까
답 : 씬을 나누는건 당장의 리소스를 줄이는데는 도움이 거의 안된다
씬을 로드했을때 씬의 모델은 그대로 있기때문에 결국 오브젝트를 껏다 켜야 하기때문
스트리밍 레벨을 사용하는것도 별로 의미는 없다
로딩도중 씬이 2개가 되는 순간이 존재하는데 그렇게 될 경우 오히려 부하가 많이 걸릴수도있다

아예 건물안에 들어가는식으로 씬을 나눠버리는건 괜찮을수 있다


생각해본 컬링을 하는 방법

맵을 일정한 타일로 나눠서 시야에 들어가는 부분을 제외하고 전부 꺼준다
문제 : 타일위의 오브젝트들은 어떻게하는가?
답 : 타일위에 존재할땐 그 타일의 자식오브젝트로 넣어서 전부 한꺼번에 비활성화 해준다

문제 : 타일위의 적캐릭터들은 어떻게하는가?
답 : 타일위에 있는게 적캐릭터인지 조건검사를 해서 
만약 적 캐릭터 이면 rigidbody나 애니메이션같은 불필요한것들을 모두 끈 후
AI만 작동시키는 방식으로 하면 될거같다



